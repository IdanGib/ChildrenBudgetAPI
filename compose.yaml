# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    environment:
      NODE_ENV: production
      API_PORT: 3000
      DB_POSTGRESQL_PORT: 5432
      AUTH_GOOGLE_REDIRECT: http://localhost:3000/auth/google/callback
      DB_POSTGRESQL_HOST: host.docker.internal
      DB_POSTGRESQL_PASSWORD_FILE: /run/secrets/db_postgresql_password
      DB_POSTGRESQL_USERNAME_FILE: /run/secrets/db_postgresql_username
      DB_POSTGRESQL_DATABASE_FILE: /run/secrets/db_postgresql_database
      AUTH_SECRET_FILE: /run/secrets/auth_secret
      AUTH_GOOGLE_ID_FILE: /run/secrets/auth_google_id
      AUTH_GOOGLE_SECRET_FILE: /run/secrets/auth_google_secret

    ports:
      - 3000:3000
    secrets:
      - db_postgresql_host
      - db_postgresql_password
      - db_postgresql_username
      - db_postgresql_database
      - auth_secret
      - auth_google_id
      - auth_google_secret
secrets:
  db_postgresql_host:
    file: secrets\db_postgresql_host.txt
  db_postgresql_password:
    file: secrets\db_postgresql_password.txt
  db_postgresql_username:
    file: secrets\db_postgresql_username.txt
  db_postgresql_database:
    file: secrets\db_postgresql_database.txt
  auth_secret:
    file: secrets\auth_secret.txt
  auth_google_id:
    file: secrets\auth_google_id.txt
  auth_google_secret:
    file: secrets\auth_google_secret.txt    
# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

